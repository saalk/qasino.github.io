-- compare with dev-create

DROP TABLE IF EXISTS "result";
DROP TABLE IF EXISTS "cardmove";
DROP TABLE IF EXISTS "playing";
DROP TABLE IF EXISTS "card";
DROP TABLE IF EXISTS "player";
DROP TABLE IF EXISTS "game";
DROP TABLE IF EXISTS "league";
DROP TABLE IF EXISTS "roles_privileges";
DROP TABLE IF EXISTS "privilege";
DROP TABLE IF EXISTS "role";
DROP TABLE IF EXISTS "users_roles";
DROP TABLE IF EXISTS "visitor";

create sequence "privilege_seq" start with 1 increment by 50;
create sequence "role_seq" start with 1 increment by 50;

create table "card" (
"card_id" bigint generated by default as identity,
"game_id" bigint not null,
"player_id" bigint,
"created" varchar(25),
"rank_suit" varchar(3) not null,
"sequence" integer,
"face" varchar(255) not null check ("face" in ('UP','DOWN','ERROR')),
"location" varchar(255) not null check ("location" in ('PACK','STOCK','STACK','HAND','PILE_1','PILE_2','TABLEAU_1','WASTEPILE','ERROR')),
"position" varchar(255) not null check ("position" in ('SHUFFLED','ORDERED','MANUAL','ERROR')),
primary key ("card_id")
);

create table "cardmove" (
"cardmove_id" bigint generated by default as identity,
"card_move_details" varchar(255),
"turn_id" bigint not null,
"player_id" bigint,
"created" varchar(25),
"sequence" varchar(255),
"move" varchar(255) not null check ("move" in ('DEAL','PASS','NEXT','STOP','PLAY','STAND','DOUBLE','HIGHER','LOWER','ERROR')),
"location" varchar(255) check ("location" in ('PACK','STOCK','STACK','HAND','PILE_1','PILE_2','TABLEAU_1','WASTEPILE','ERROR')),
"start_fiches" integer,
"bet" integer,
"end_fiches" integer,
"card_id" bigint not null,
primary key ("cardmove_id")
);

create table "game" (
"game_id" bigint generated by default as identity,
"initiator" bigint,
"updated" varchar(25) not null,
"state" varchar(50) not null check ("state" in ('INITIALIZED','PENDING_INVITATIONS','PREPARED','STARTED','INITIATOR_MOVE','INVITEE_MOVE','BOT_MOVE','FINISHED','STOPPED','CANCELLED','ERROR')),
"previous_state" varchar(50) check ("previous_state" in ('INITIALIZED','PENDING_INVITATIONS','PREPARED','STARTED','INITIATOR_MOVE','INVITEE_MOVE','BOT_MOVE','FINISHED','STOPPED','CANCELLED','ERROR')),
"type" varchar(50) not null check ("type" in ('HIGHLOW','BLACKJACK','ERROR')),
"style" varchar(10),
"ante" integer,
"league_id" bigint,
"year" integer,
"month" tinyint check ("month" between 0 and 11),
"week" varchar(3),
"weekday" integer,
primary key ("game_id")
);

create table "league" (
"league_id" bigint generated by default as identity,
"visitor_id" bigint not null,
"created" varchar(25),
"ended" varchar(25),
"name" varchar(50) not null,
"name_seq" integer,
"is_active" boolean,
primary key ("league_id")
);

create table "player" (
"player_id" bigint generated by default as identity,
"visitor_id" bigint,
"game_id" bigint,
"created" varchar(25),
"seat" integer,
"role" varchar(20) not null check ("role" in ('INITIATOR','INVITED','ACCEPTED','REJECTED','BOT','ERROR')),
"ai_level" varchar(50) check ("ai_level" in ('DUMB','AVERAGE','SMART','HUMAN','ERROR')),
"avatar_name" varchar(50),
"avatar" varchar(50) check ("avatar" in ('ELF','MAGICIAN','GOBLIN','ROMAN','ERROR')),
"start_fiches" integer,
"fiches" integer,
"is_human" boolean,
"is_winner" boolean,
primary key ("player_id")
);

create table "privilege" (
"privilege_id" bigint not null,
"name" varchar(25),
primary key ("privilege_id")
);

create table "result" (
"result_id" bigint generated by default as identity,
"player_id" bigint not null unique,
"visitor_id" bigint,
"created" varchar(25),
"winner" boolean,
"fiches_won" integer,
"year" integer,
"month" tinyint check ("month" between 0 and 11),
"week" varchar(3),
"weekday" integer,
"game_id" bigint not null,
"type" varchar(50) not null check ("type" in ('HIGHLOW','BLACKJACK','ERROR')),
primary key ("result_id")
);

create table "role" (
"role_id" bigint not null,
"name" varchar(255),
primary key ("role_id")
);

create table "roles_privileges" (
"privilege_id" bigint not null,
"role_id" bigint not null
);

create table "playing" (
"playing_id" bigint generated by default as identity,
"game_id" bigint not null unique,
"player_id" bigint not null unique,
"created" varchar(25),
"current_round_number" integer,
"current_seat_number" integer,
"current_move_number" integer,
"year" integer,
"month" tinyint check ("month" between 0 and 11),
"week" varchar(3),
"weekday" integer,
primary key ("playing_id")
);

create table "users_roles" (
"role_id" bigint not null,
"visitor_id" bigint not null
);
create table "visitor" (
"visitor_id" bigint generated by default as identity,
"created" varchar(25),
"username" varchar(25) not null unique,
"password" varchar(60),
"email" varchar(50) not null,
"alias" varchar(50) not null,
"alias_seq" integer,
"balance" integer,
"secured_loan" integer,
"enabled" boolean not null,
"is_using2fa" boolean not null,
"year" integer,
"month" tinyint check ("month" between 0 and 11),
"week" varchar(3),
"weekday" integer,
primary key ("visitor_id")
);

create index "cards_game_index" on "card" ("game_id");
create index "alias_index" on "visitor" ("alias");

alter table if exists "card" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "card" add constraint fk_player_id foreign key ("player_id") references "player";
alter table if exists "cardmove" add constraint fk_turn_id foreign key ("turn_id") references "turn";
alter table if exists "game" add constraint fk_league_id foreign key ("league_id") references "league";
alter table if exists "game" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";
alter table if exists "league" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";
alter table if exists "player" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "player" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";
alter table if exists "playing" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "playing" add constraint fk_player_id foreign key ("player_id") references "player";
alter table if exists "result" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "result" add constraint fk_player_id foreign key ("player_id") references "player";
alter table if exists "result" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";

alter table if exists "roles_privileges" add constraint "fk_privilege_id" foreign key ("privilege_id") references "privilege";
alter table if exists "roles_privileges" add constraint "fk_role_id" foreign key ("role_id") references "role";
alter table if exists "users_roles" add constraint "fk_role_id" foreign key ("role_id") references "role";
alter table if exists "users_roles" add constraint "fk_visitor_id" foreign key ("visitor_id") references "visitor";
