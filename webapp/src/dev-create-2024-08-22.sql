create sequence "privilege_seq" start with 1 increment by 50;
create sequence "role_seq" start with 1 increment by 50;
create table "card" ("rank_suit" varchar(3) not null, "sequence" integer, "card_id" bigint generated by default as identity, "game_id" bigint not null, "player_id" bigint unique, "created" varchar(25), "face" varchar(255) not null check ("face" in ('UP','DOWN','ERROR')), "location" varchar(255) not null check ("location" in ('PACK','STOCK','STACK','HAND','PILE_1','PILE_2','TABLEAU_1','WASTEPILE','ERROR')), "position" varchar(255) not null check ("position" in ('SHUFFLED','ORDERED','MANUAL','ERROR')), primary key ("card_id"));
create table "cardmove" ("bet" integer, "end_fiches" integer, "start_fiches" integer, "card_id" bigint, "cardmove_id" bigint generated by default as identity, "player_id" bigint, "playing_id" bigint not null, "created" varchar(25), "card_move_details" varchar(255), "location" varchar(255) check ("location" in ('PACK','STOCK','STACK','HAND','PILE_1','PILE_2','TABLEAU_1','WASTEPILE','ERROR')), "move" varchar(255) not null check ("move" in ('DEAL','PASS','NEXT','STOP','PLAY','STAND','DOUBLE','HIGHER','LOWER','ERROR')), "sequence" varchar(255), primary key ("cardmove_id"));
create table "game" ("ante" integer, "month" tinyint check ("month" between 0 and 11), "week" varchar(3), "weekday" integer, "year" integer, "game_id" bigint generated by default as identity, "initiator" bigint, "league_id" bigint, "style" varchar(10), "updated" varchar(25) not null, "previous_state" varchar(50) check ("previous_state" in ('INITIALIZED','PENDING_INVITATIONS','PREPARED','STARTED','INITIATOR_MOVE','INVITEE_MOVE','BOT_MOVE','FINISHED','QUIT','CANCELLED','ERROR')), "state" varchar(50) not null check ("state" in ('INITIALIZED','PENDING_INVITATIONS','PREPARED','STARTED','INITIATOR_MOVE','INVITEE_MOVE','BOT_MOVE','FINISHED','QUIT','CANCELLED','ERROR')), "type" varchar(50) not null check ("type" in ('HIGHLOW','BLACKJACK','ERROR')), primary key ("game_id"));
create table "league" ("is_active" boolean, "name_seq" integer, "league_id" bigint generated by default as identity, "visitor_id" bigint not null, "created" varchar(25), "ended" varchar(25), "name" varchar(50) not null, primary key ("league_id"));
create table "player" ("fiches" integer, "is_human" boolean, "is_winner" boolean, "seat" integer, "start_fiches" integer, "game_id" bigint, "player_id" bigint generated by default as identity, "visitor_id" bigint, "role" varchar(20) not null check ("role" in ('INITIATOR','INVITED','INVITEE','REJECTED','BOT','ERROR')), "created" varchar(25), "ai_level" varchar(50) check ("ai_level" in ('DUMB','AVERAGE','SMART','HUMAN','ERROR')), "avatar" varchar(50) check ("avatar" in ('ELF','MAGICIAN','GOBLIN','ROMAN','ERROR')), "avatar_name" varchar(50), primary key ("player_id"));
create table "playing" ("current_move_number" integer, "current_round_number" integer, "current_seat_number" integer, "month" tinyint check ("month" between 0 and 11), "week" varchar(3), "weekday" integer, "year" integer, "game_id" bigint not null unique, "player_id" bigint not null unique, "playing_id" bigint generated by default as identity, "created" varchar(25), primary key ("playing_id"));
create table "privilege" ("privilege_id" bigint not null, "name" varchar(25), primary key ("privilege_id"));
create table "result" ("fiches_won" integer, "month" tinyint check ("month" between 0 and 11), "week" varchar(3), "weekday" integer, "winner" boolean, "year" integer, "game_id" bigint not null, "player_id" bigint not null unique, "result_id" bigint generated by default as identity, "visitor_id" bigint, "created" varchar(25), "type" varchar(50) not null check ("type" in ('HIGHLOW','BLACKJACK','ERROR')), primary key ("result_id"));
create table "role" ("role_id" bigint not null, "name" varchar(255), primary key ("role_id"));
create table "roles_privileges" ("privilege_id" bigint not null, "role_id" bigint not null);
create table "users_roles" ("role_id" bigint not null, "visitor_id" bigint not null);
create table "visitor" ("alias_seq" integer, "balance" integer, "enabled" boolean not null, "is_using2fa" boolean not null, "month" tinyint check ("month" between 0 and 11), "secured_loan" integer, "week" varchar(3), "weekday" integer, "year" integer, "visitor_id" bigint generated by default as identity, "created" varchar(25), "username" varchar(25) unique, "alias" varchar(50) not null, "email" varchar(50), "password" varchar(60), primary key ("visitor_id"));
create index "cards_game_index" on "card" ("game_id");
create index "alias_index" on "visitor" ("alias");
alter table if exists "card" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "card" add constraint fk_player_id foreign key ("player_id") references "player";
alter table if exists "cardmove" add constraint fk_playing_id foreign key ("playing_id") references "playing";
alter table if exists "game" add constraint fk_league_id foreign key ("league_id") references "league";
alter table if exists "league" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";
alter table if exists "player" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "player" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";
alter table if exists "playing" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "playing" add constraint fk_player_id foreign key ("player_id") references "player";
alter table if exists "result" add constraint fk_game_id foreign key ("game_id") references "game";
alter table if exists "result" add constraint fk_player_id foreign key ("player_id") references "player";
alter table if exists "result" add constraint fk_visitor_id foreign key ("visitor_id") references "visitor";
alter table if exists "roles_privileges" add constraint "FKqdkx0p2y8beq5lgy8gkd5p0x" foreign key ("privilege_id") references "privilege";
alter table if exists "roles_privileges" add constraint "FKf9g87v3a8i8cym8qc8jvu1jyb" foreign key ("role_id") references "role";
alter table if exists "users_roles" add constraint "FKjticpblwpgkc74xs0dvirhdtr" foreign key ("role_id") references "role";
alter table if exists "users_roles" add constraint "FK2b45blclate4s8l1pal3hlf6x" foreign key ("visitor_id") references "visitor";
